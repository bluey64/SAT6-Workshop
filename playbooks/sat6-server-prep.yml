---
- hosts: satellite
  tasks:

    - name: "PING all hosts to ensure we are alive and ready"
      ping:

    - name: "CMD unmount previous satellite filesystems"
      shell:
        cmd: |
          if grep -q {{ item.mount }} /proc/mounts ; then umount {{ item.mount }} ; fi
      with_items:
        - {vg: 'sat6_vg', lv: 'pulp',    mount: '/var/lib/pulp'}
        - {vg: 'sat6_vg', lv: 'pgsql',   mount: '/var/lib/pgsql'}
        - {vg: 'sat6_vg', lv: 'mongodb', mount: '/var/libm/mongodb'}
        - {vg: 'sat6_vg', lv: 'squid',   mount: '/var/spool/squid'}
        - {vg: 'sat6_vg', lv: 'cache',   mount: '/var/cache'}

    - name: "CMD cleanup previous satellite storage"
      shell:
        cmd: |
          echo "need to check mounts && umount"
          vgs sat6_vg && vgremove --force sat6_vg
          pvs /dev/vdb && pvremove --force /dev/vdb
          wipefs -a /dev/vdb

    - name: "CMD prepare satellite storage"
      shell:
        cmd: |
          pvcreate /dev/vdb
          vgcreate sat6_vg /dev/vdb
          lvcreate -L 50GB  -n mongodb sat6_vg
          lvcreate -L 100GB -n pulp    sat6_vg
          lvcreate -L 5GB   -n pgsql   sat6_vg
          lvcreate -L 5GB   -n squid   sat6_vg
          lvcreate -L 20GB  -n cache   sat6_vg

    - name: "CMD remove old cache directory"
      shell:
        cmd: |
          rm -rf /var/cache
          mkdir -p /var/cache

    - name: "CMD create filesystems, mount points and fstab entries"
      shell:
        cmd: |
          mkfs -t xfs /dev/{{ item.vg }}/{{ item.lv }}
          mkdir -p {{ item.mount }}
          grep -q {{ item.mount }} /etc/fstab || echo "/dev/mapper/{{item.vg}}-{{ item.lv }} {{ item.mount }} xfs defaults 0 0" >> /etc/fstab
      with_items:
        - {vg: 'sat6_vg', lv: 'pulp',    mount: '/var/lib/pulp'}
        - {vg: 'sat6_vg', lv: 'pgsql',   mount: '/var/lib/pgsql'}
        - {vg: 'sat6_vg', lv: 'mongodb', mount: '/var/libm/mongodb'}
        - {vg: 'sat6_vg', lv: 'squid',   mount: '/var/spool/squid'}
        - {vg: 'sat6_vg', lv: 'cache',   mount: '/var/cache'}

    - name: "CMD mount everything"
      shell:
        cmd: |
          mount -a
          
    - name: "CMD configure firewalld"
      shell:
        cmd: |
          firewall-cmd --add-port="{{ item.port }}"
      with_items:
        - {port: "53/udp"}
        - {port: "53/tcp"}
        - {port: "67/udp"}
        - {port: "69/udp"}
        - {port: "80/tcp"}
        - {port: "443/tcp"} 
        - {port: "5000/tcp"}
        - {port: "5647/tcp"}
        - {port: "8000/tcp"}
        - {port: "8140/tcp"}
        - {port: "9090/tcp"}

    - name: "CMD save firewalld state"
      shell:
        cmd: |
          firewall-cmd --runtime-to-permanent
          
